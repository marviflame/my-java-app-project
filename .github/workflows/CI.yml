

name: CI-CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  compile_maven:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn compile

  unit_test:

    runs-on: ubuntu-latest
    needs: compile_maven
    steps:
    - uses: actions/checkout@v4
    - name: Unit Testing
      run: mvn test

  security_check:

    runs-on: ubuntu-latest
    needs: unit_test
    steps:
    - uses: actions/checkout@v4
    - name: Trivy Installation
      run: |
          sudo apt-get install wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update -y
          sudo apt-get install trivy -y

    - name: Trivy Fs Scan
      run:
          trivy fs --format table -o fs-report.json .

    - name: gitleaks Installation & Scan
      run: |
          sudo apt-get install gitleaks -y
          gitleaks detect source . -r gitleaks-report.json -f json

  SonaQube_scan:

    runs-on: ubuntu-latest
    needs: security_check
    steps:    
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Analyze with SonarCloud
      uses: sonarsource/sonarcloud-github-action@v5
      env:
        GITHUB_TOKEN: ${{ secrets._GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        projectBaseDir: my-java-app-project
        args: >
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.host.url=${{ secrets.SONAR_URL }}
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
            -Dsonar.sources=src/
            -Dsonar.verbose=true