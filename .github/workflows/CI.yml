

name: CI-CD Pipeline

on:
  push:
    branches: [ "main" ]

jobs:
  compile_maven:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn compile

  unit_test:

    runs-on: ubuntu-latest
    needs: compile_maven
    steps:
    - uses: actions/checkout@v4
    - name: Unit Testing
      run: mvn test

  security_check:

    runs-on: ubuntu-latest
    needs: unit_test
    steps:
    - uses: actions/checkout@v4
    - name: Trivy Installation
      run: |
          sudo apt-get install wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update -y
          sudo apt-get install trivy -y

    - name: Trivy Fs Scan
      run:
          trivy fs --format table -o fs-report.json .

    - name: gitleaks Installation & Scan
      run: |
          sudo apt-get install gitleaks -y
          gitleaks detect source . -r gitleaks-report.json -f json

  sonaqube_scan:

    runs-on: ubuntu-latest
    needs: security_check
    permissions:
      contents: read
      security-events: write
      actions: read  
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
 
    - name: SonarQube Quality Gate check
      id: sonarqube-quality-gate-check
      uses: sonarsource/sonarqube-quality-gate-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}

  build_maven:

    runs-on: ubuntu-latest
    needs: sonaqube_scan
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: build the code
      run: mvn package

    - name: Upload Jar Artifact
      uses: actions/upload-artifact@v4
      with:
        name: demoapp.jar
        path: target/*.jar   

  docker_build_and_push:
    runs-on: ubuntu-latest
    needs: build_maven
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Download JAR Artifact
      uses: actions/download-artifact@v4
      with:
        name: demoapp.jar

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub (if pushing)
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile  # Path to your Dockerfile
        tags: marviflame89/demoapp:1.0.0
        push: true  # Set to false for local testing

  docker_trivy-scan:
    runs-on: ubuntu-latest
    needs: docker_build_and_push  # Depends on the Docker image being built
    steps:
    - name: Checkout code
      uses: actions/checkout@v4


    - name: Generate Trivy Vulnerability Report
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: marviflame89/demoapp:1.0.0
        scan-type: "fs"
        output: trivy-report.json
        format: json
        scan-ref: .
        exit-code: 0

    - name: Upload Vulnerability Scan Results
      uses: actions/upload-artifact@v4
      with:
        name: trivy-report
        path: trivy-report.json
        retention-days: 30

    - name: Fail build on High/Criticial Vulnerabilities
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: "fs"
        format: table
        scan-ref: .
        severity: HIGH,CRITICAL
        ignore-unfixed: true
        exit-code: 1
          # On a subsequent call to the action we know trivy is already installed so can skip this
        skip-setup-trivy: true        
   
