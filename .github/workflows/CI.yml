

name: CI-CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  compile_maven:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn compile

  unit_test:

    runs-on: ubuntu-latest
    needs: compile_maven
    steps:
    - uses: actions/checkout@v4
    - name: Unit Testing
      run: mvn test

  security_check:

    runs-on: ubuntu-latest
    needs: unit_test
    steps:
    - uses: actions/checkout@v4
    - name: Trivy Installation
      run: |
          sudo apt-get install wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update -y
          sudo apt-get install trivy -y

    - name: Trivy Fs Scan
      run:
          trivy fs --format table -o fs-report.json .

    - name: gitleaks Installation & Scan
      run: |
          sudo apt-get install gitleaks -y
          gitleaks detect source . -r gitleaks-report.json -f json

  sonaqube_scan:

    runs-on: ubuntu-latest
    needs: security_check
    permissions:
      contents: read
      security-events: write
      actions: read  
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@v5.0.0
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
 
    - name: SonarQube Quality Gate check
      id: sonarqube-quality-gate-check
      uses: sonarsource/sonarqube-quality-gate-action@master
      with:
        pollingTimeoutSec: 600
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}



  # build_maven:

  #   runs-on: ubuntu-latest
  #   needs: sonaqube_scan
  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Set up JDK 17
  #     uses: actions/setup-java@v4
  #     with:
  #       java-version: '17'
  #       distribution: 'temurin'
  #       cache: maven
  #   - name: build the code
  #     run: mvn package



  # Docker:
  #   runs-on: ubuntu-latest
  #   needs: build_maven
  #   steps:
  #     - name: Login to Docker Hub
  #       uses: actions/checkout@v4
  #       env:
  #         DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  #         DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

  #     -
  #       name: Set up QEMU
  #       uses: docker/setup-qemu-action@v3
  #     -
  #       name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3
  #     -
  #       name: Build and push
  #       uses: docker/build-push-action@v6
  #       with:
  #         push: true
  #         tags: user/app:latest
   
